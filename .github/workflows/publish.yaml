name: "Main"

on:
  release:
    types: [published]
  push:
    branches:
      - "main"

env:
  CLUSTER:  ${{ github.ref != 'refs/remotes/origin/main' && 'assessments-ecs-staging' || 'assessments-ecs-prod' }}

jobs:
  teste:
    runs-on: ubuntu-latest
    steps:
    - name: Get short SHA
      id: slug
      run: echo "::set-output name=sha7::$(echo ${GITHUB_SHA} | cut -c1-7)"
    - name: Set env to deploy
      id: vars
      run: echo "The selected cluster is ${{ env.CLUSTER }} and version id ${{ steps.slug.outputs.sha7 }}"
    - name: Echo ref
      run: echo "${{ github.ref }}"
    - name: Echo release
      run: echo "${{ github.event.release.prerelease }}"
  variables:
    runs-on: ubuntu-latest
    outputs:
      cluster: ${{ CLUSTER_2 }}
    steps:
      - name: Set staging variables
        id: staging
        if: github.ref == 'refs/heads/main'
        run: |
          echo "assessments-ecs-staging" > $CLUSTER_2
          echo "::set-output name=cluster::$(echo assessments-ecs-staging)"
          echo "::set-output name=backend_task::$(echo ecs/backend.json)"
          echo "::set-output name=frontend_task::$(echo ecs/frontend.json)"
      - name: Set prod variables
        if: "!github.event.release.prerelease"
        run: |
          echo "assessments-ecs-prod" > $CLUSTER_2
          echo "::set-output name=cluster::$(echo assessments-ecs-prod)"
          echo "::set-output name=backend_task::$(echo ecs/backend.prod.json)"
          echo "::set-output name=frontend_task::$(echo ecs/frontend.prod.json)"
      
      
        
